{"name":"Guillotine","body":"# Guillotine\r\n\r\nSimple URL Shortener hobby kit.  Currently used to shorten URLs at GitHub.com, and also available as a an [installable Heroku app](https://github.com/mrtazz/katana).\r\n\r\n## USAGE\r\n\r\nThe easiest way to use it is with the built-in memory adapter.\r\n\r\n```ruby\r\n# app.rb\r\nrequire 'guillotine'\r\nmodule MyApp\r\n  class App < Guillotine::App\r\n    adapter = Guillotine::Adapters::MemoryAdapter.new\r\n    set :service => Guillotine::Service.new(adapter)\r\n\r\n    get '/' do\r\n      redirect 'https://homepage.com'\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n```ruby\r\n# config.ru\r\nrequire \"rubygems\"\r\nrequire File.expand_path(\"../app.rb\", __FILE__)\r\nrun MyApp::App\r\n```\r\n\r\nOnce it's running, add URLs with a simple POST.\r\n\r\n    curl http://localhost:4567 -i \\\r\n      -F \"url=http://techno-weenie.net\"\r\n\r\nYou can specify your own code too:\r\n\r\n    curl http://localhost:4567 -i \\\r\n      -F \"url=http://techno-weenie.net\" \\\r\n      -F \"code=abc\"\r\n\r\n## Sequel\r\n\r\nThe memory adapter sucks though.  You probably want to use a DB.  Check\r\nout the [Sequel gem](http://sequel.rubyforge.org/) for more examples.\r\nIt'll support SQLite, MySQL, PostgreSQL, and a bunch of other databases.\r\n\r\n```ruby\r\nrequire 'guillotine'\r\nrequire 'sequel'\r\nmodule MyApp\r\n  class App < Guillotine::App\r\n    db = Sequel.sqlite \r\n    adapter = Guillotine::Adapters::SequelAdapter.new(db)\r\n    set :service => Guillotine::Service.new(adapter)\r\n  end\r\nend\r\n```\r\n\r\nYou'll need to initialize the DB schema with something like this\r\n(depending on which DB you use):\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS `urls` (\r\n  `url` varchar(255) DEFAULT NULL,\r\n  `code` varchar(255) DEFAULT NULL,\r\n  UNIQUE KEY `url` (`url`),\r\n  UNIQUE KEY `code` (`code`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n```\r\n\r\n## Redis\r\n\r\nRedis works well, too.  The sample below is [adapted](https://github.com/mrtazz/katana/blob/master/app.rb) from [Katana](https://github.com/mrtazz/katana), a hosted wrapper around Guillotine designed for Heroku.\r\n\r\n```ruby\r\nrequire 'guillotine'\r\nrequire 'redis'\r\n\r\nmodule MyApp\r\n  class App < Guillotine::App\r\n    # use redis adapter with redistogo on Heroku\r\n    uri = URI.parse(ENV[\"REDISTOGO_URL\"])\r\n    redis = Redis.new(:host => uri.host, :port => uri.port, :password => uri.password)\r\n    adapter = Guillotine::Adapters::RedisAdapter.new(redis)\r\n    set :service => Guillotine::Service.new(adapter)\r\n  end\r\nend\r\n```\r\n\r\n## Riak\r\n\r\nIf you need to scale out your url shortening services across the cloud,\r\nyou can use Riak!\r\n\r\n```ruby\r\nrequire 'guillotine'\r\nrequire 'riak/client'\r\nmodule MyApp\r\n  class App < Guillotine::App\r\n    client = Riak::Client.new :protocol => 'pbc', :pb_port => 8087\r\n    bucket = client['guillotine']\r\n    adapter = Guillotine::Adapters::RiakAdapter.new(bucket)\r\n    set :service => Guillotine::Service.new(adapter)\r\n  end\r\nend\r\n```\r\n\r\n## Domain Restriction\r\n\r\nYou can restrict what domains that Guillotine will shorten.\r\n\r\n```ruby\r\nrequire 'guillotine'\r\nmodule MyApp\r\n  class App < Guillotine::App\r\n    adapter = Guillotine::Adapters::MemoryAdapter.new\r\n    # only this domain\r\n    set :service => Guillotine::Service.new(adapter,\r\n      'github.com')\r\n\r\n    # or, any *.github.com domain\r\n    set :service => Guillotine::Service.new(adapter,\r\n      /(^|\\.)github\\.com$/)\r\n  end\r\nend\r\n```\r\n\r\n## Not TODO\r\n\r\n* Statistics\r\n* Authentication","google":"","tagline":"URL shortening hobby kit","note":"Don't delete this file! It's used internally to help with page regeneration."}